{"code":"// runtime-dom  这个文件时操作dom的核心文件 1、创建dom 2、更新dom 3、删除dom\nimport { extend } from \"@vue/shared\";\nimport { nodeOps } from \"./nodeOps\";\nimport { patchProps } from \"./patchProp\";\nimport { createRender } from \"@vue/runtime-core\";\n// vue3 dom 的 全部 操作\nconst renderOptionDom = extend({ patchProps }, nodeOps);\nexport { renderOptionDom };\n// createApp\nexport const createApp = (rootComponent, rootProps = null) => {\n    let app = createRender(renderOptionDom).createApp(rootComponent, rootProps);\n    let { mount } = app;\n    app.mount = (container) => {\n        container = nodeOps.querySelector(container);\n        if (!container) {\n            console.warn(`挂载的元素不存在`);\n            return;\n        }\n        // 挂载时清空容器\n        container.innerHTML = \"\";\n        mount(container);\n    };\n    return app;\n};\n","references":["D:/个人项目/vue-source/packages/shared/src/index.ts","D:/个人项目/vue-source/packages/runtime-dom/src/nodeOps.ts","D:/个人项目/vue-source/packages/runtime-dom/src/patchProp.ts","D:/个人项目/vue-source/packages/runtime-core/src/index.ts"],"dts":{"name":"D:/个人项目/vue-source/node_modules/.cache/rollup-plugin-typescript2/placeholder/runtime-dom/src/index.d.ts","writeByteOrderMark":false,"text":"declare const renderOptionDom: {\n    patchProps: (el: any, key: any, prevValue: any, nextValue: any) => void;\n} & {\n    createElement(tag: string): HTMLElement;\n    remove(child: any): void;\n    insert(child: any, parent: any, anchor?: any): void;\n    querySelector(selector: string): Element;\n    setElementText(el: any, text: any): void;\n    createText(text: any): Text;\n};\nexport { renderOptionDom };\nexport declare const createApp: (rootComponent: any, rootProps?: any) => {\n    _component: any;\n    _props: any;\n    _container: any;\n    mount(rootContainer: any): void;\n};\n"}}
