{"code":"import { isArray, isObject } from \"@vue/shared\";\nimport { createVNode, isVnode } from \"./vnode\";\nexport function h(type, propsOrChildren, children) {\n    // 创建虚拟节点\n    const i = arguments.length; // 参数的长度\n    if (i === 2) {\n        // 如果参数的长度为2\n        if (isObject(propsOrChildren) && !isArray(propsOrChildren)) {\n            // 如果是对象并且不是数组\n            if (isVnode) {\n                // 如果是虚拟节点\n                return createVNode(type, null, [propsOrChildren]);\n            }\n            // 没有 儿子\n            return createVNode(type, propsOrChildren);\n        }\n        else {\n            // 就是 儿子  children\n            return createVNode(type, null, propsOrChildren);\n        }\n    }\n    else {\n        // 三个参数\n        if (i > 3) {\n            // 如果参数的长度大于3\n            children = Array.prototype.slice.call(arguments, 2);\n        }\n        else if (i === 3 && isVnode(children)) {\n            // 如果参数的长度等于3 并且是虚拟节点\n            children = [children];\n        }\n        return createVNode(type, propsOrChildren, children);\n    }\n}\n// h函数是变成虚拟dom的函数\n","references":["E:/前端学习/vue-source/hand-write-vue3-source/packages/shared/src/index.ts","E:/前端学习/vue-source/hand-write-vue3-source/packages/runtime-core/src/vnode.ts"],"dts":{"name":"E:/前端学习/vue-source/hand-write-vue3-source/node_modules/.cache/rollup-plugin-typescript2/placeholder/runtime-core/src/h.d.ts","writeByteOrderMark":false,"text":"export declare function h(type: any, propsOrChildren: any, children: any): {\n    _v_isVNode: boolean;\n    type: any;\n    props: any;\n    children: any;\n    key: any;\n    el: any;\n    conmponent: {};\n    shapeFlag: number;\n};\n"}}
