{"code":"// 属性 操作\nimport { patchClass } from \"./modules/class\";\nimport { patchStyle } from \"./modules/style\";\nimport { patchAttr } from \"./modules/attr\";\nimport { patchEvent } from \"./modules/event\";\n// 使用了策略模式\nexport const patchProps = (el, key, prevValue, nextValue) => {\n    switch (key) {\n        case \"class\":\n            patchClass(el, nextValue);\n            break;\n        case \"style\":\n            patchStyle(el, prevValue, nextValue);\n            break;\n        default:\n            if (/^on[^a-z]/.test(key)) {\n                // 事件\n                patchEvent(el, key, nextValue);\n            }\n            else {\n                // 自定义属性\n                patchAttr(el, key, nextValue);\n            }\n    }\n};\n","references":["E:/前端学习/vue-source/hand-write-vue3-source/packages/runtime-dom/src/modules/class.ts","E:/前端学习/vue-source/hand-write-vue3-source/packages/runtime-dom/src/modules/style.ts","E:/前端学习/vue-source/hand-write-vue3-source/packages/runtime-dom/src/modules/attr.ts","E:/前端学习/vue-source/hand-write-vue3-source/packages/runtime-dom/src/modules/event.ts"],"dts":{"name":"E:/前端学习/vue-source/hand-write-vue3-source/node_modules/.cache/rollup-plugin-typescript2/placeholder/runtime-dom/src/patchProp.d.ts","writeByteOrderMark":false,"text":"export declare const patchProps: (el: any, key: any, prevValue: any, nextValue: any) => void;\n"}}
